{"version":3,"sources":["../node_modules/detect.js/detect.js"],"names":["root","undefined","Array","prototype","map","callback","thisArg","T","A","k","this","TypeError","O","Object","len","length","kValue","mappedValue","call","detect","_this","parsers","types","regexes","browser_parsers","regex","family_replacement","manufacturer","other","family_replacment","tablet","v2_replacement","v1_replacement","os_parsers","os_v2_replacement","os_v1_replacement","os_replacement","mobile_os_families","device_parsers","device_replacement","mobile_browser_families","results","parser","families","type","ArrayProto","nativeForEach","Function","forEach","find","indexOf","ua","obj","ret","i","each","iterator","context","l","key","_","has","check","str","toVersionString","output","major","minor","patch","toString","suffix","family","parse","regexp","RegExp","rep","major_rep","major_version_replacement","m","match","replace","parseInt","man","a","source","browser","name","version","os","device","arr","props","mobile_agents","hasOwnProperty","prop","module","exports","require","window"],"mappings":"kFAAA,OAiBA,SAAWA,EAAMC,GAIVC,MAAMC,UAAUC,MACnBF,MAAMC,UAAUC,IAAM,SAAUC,EAAUC,GACxC,IAAIC,EAAGC,EAAGC,EAEV,GAAY,MAARC,KACF,MAAM,IAAIC,UAAU,gCAItB,IAAIC,EAAIC,OAAOH,MAGXI,EAAMF,EAAEG,SAAW,EAGvB,GAAwB,oBAAbV,EACT,MAAM,IAAIM,UAAUN,EAAW,sBAcjC,IAVIC,IACFC,EAAID,GAKNE,EAAI,IAAIN,MAAMY,GAEdL,EAAI,EAEGA,EAAIK,GAAK,CACd,IAAIE,EAAQC,EAMRR,KAAKG,IAEPI,EAASJ,EAAEH,GAGXQ,EAAcZ,EAASa,KAAKX,EAAGS,EAAQP,EAAGG,GAO1CJ,EAAEC,GAAKQ,GAITR,IAIF,OAAOD,IAKX,IAAIW,EAASnB,EAAKmB,OAAS,WAEzB,IAAIC,EAAQ,aA04BZA,EAAMC,QAAU,CAAC,iBAAkB,kBAAmB,aAAc,qBAAsB,2BAE1FD,EAAME,MAAQ,CAAC,UAAW,KAAM,UAEhCF,EAAMG,QA34BQ,CACZC,gBAAiB,CAAC,CAChBC,MAAO,2CACPC,mBAAoB,MACpBC,aAAc,YACb,CACDF,MAAO,0DACPC,mBAAoB,SACpBE,OAAO,GACN,CACDH,MAAO,2CACPC,mBAAoB,8BACpBE,OAAO,GACN,CACDH,MAAO,gDACPC,mBAAoB,kBACnB,CACDD,MAAO,gCACPI,kBAAmB,kBAClB,CACDJ,MAAO,2BACPC,mBAAoB,kBACnB,CACDD,MAAO,oCACPC,mBAAoB,kBACnB,CACDD,MAAO,kEACPC,mBAAoB,gBACnB,CACDD,MAAO,yCACPC,mBAAoB,iBACnB,CACDD,MAAO,yCACPC,mBAAoB,gBACnB,CACDD,MAAO,0DACPC,mBAAoB,iBACnB,CACDD,MAAO,0DACPC,mBAAoB,gBACnB,CACDD,MAAO,kEACPC,mBAAoB,gBACnB,CACDD,MAAO,qDACPC,mBAAoB,SACpBI,QAAQ,GACP,CACDL,MAAO,8DACN,CACDA,MAAO,kCACPC,mBAAoB,QACpBE,OAAO,GACN,CACDH,MAAO,sCACPC,mBAAoB,WACpBE,OAAO,GACN,CACDH,MAAO,uCACPC,mBAAoB,YACnB,CACDD,MAAO,wCACPC,mBAAoB,YACnB,CACDD,MAAO,uCACPC,mBAAoB,YACnB,CACDD,MAAO,4BACPC,mBAAoB,sBACpBE,OAAO,GACN,CACDH,MAAO,wDACPC,mBAAoB,eACpBI,QAAQ,GACP,CACDL,MAAO,gDACPC,mBAAoB,gBACnB,CACDD,MAAO,aACPC,mBAAoB,gBACnB,CACDD,MAAO,+BACPC,mBAAoB,cACnB,CACDD,MAAO,mCACPC,mBAAoB,cACnB,CACDD,MAAO,sDACPC,mBAAoB,SACnB,CACDD,MAAO,sCACPC,mBAAoB,SACnB,CACDD,MAAO,iCACPC,mBAAoB,SACnB,CACDD,MAAO,0BACPC,mBAAoB,SACnB,CACDD,MAAO,yCACPC,mBAAoB,kBACnB,CACDD,MAAO,WACPC,mBAAoB,SACpBE,OAAO,GACN,CACDH,MAAO,+CACPC,mBAAoB,YACpBE,OAAO,GACN,CACDH,MAAO,4DACPC,mBAAoB,WACpBE,OAAO,GACN,CACDH,MAAO,4DACPC,mBAAoB,WACpBE,OAAO,GACN,CACDH,MAAO,SACPC,mBAAoB,SACpBE,OAAO,GACN,CACDH,MAAO,iDACPC,mBAAoB,WACpBE,OAAO,GACN,CACDH,MAAO,uCACPC,mBAAoB,YACpBE,OAAO,GACN,CACDH,MAAO,kBACPC,mBAAoB,QACpBE,OAAO,GACN,CACDH,MAAO,2CACPC,mBAAoB,gBACpBE,OAAO,GACN,CACDH,MAAO,kBACPC,mBAAoB,iBACpBE,OAAO,GACN,CACDH,MAAO,2BACPC,mBAAoB,UACnB,CACDD,MAAO,2BACPC,mBAAoB,WACpBE,OAAO,GACN,CACDH,MAAO,SACPC,mBAAoB,SACpBE,OAAO,GACN,CACDH,MAAO,yBACPC,mBAAoB,QACnB,CACDD,MAAO,2CACPC,mBAAoB,iBACnB,CACDD,MAAO,4CACPC,mBAAoB,qBACnB,CACDD,MAAO,oDACPC,mBAAoB,iBACnB,CACDD,MAAO,yCACPC,mBAAoB,gBACnB,CACDD,MAAO,uCACPC,mBAAoB,aACpBE,OAAO,GACN,CACDH,MAAO,gCACPC,mBAAoB,gBACpBE,OAAO,GACN,CACDH,MAAO,oCACPC,mBAAoB,WACpBE,OAAO,GACN,CACDH,MAAO,oCACPC,mBAAoB,iBACpBE,OAAO,GACN,CACDH,MAAO,4CACPC,mBAAoB,aACpBE,OAAO,GACN,CACDH,MAAO,wCACPC,mBAAoB,eACnB,CACDD,MAAO,+BACPC,mBAAoB,cACnB,CACDD,MAAO,ubACN,CACDA,MAAO,2ZACN,CACDA,MAAO,mGACN,CACDA,MAAO,kFACN,CACDA,MAAO,kBACPM,eAAgB,IAChBC,eAAgB,KACf,CACDP,MAAO,mBACPM,eAAgB,IAChBC,eAAgB,KACf,CACDP,MAAO,kBACPM,eAAgB,IAChBC,eAAgB,KACf,CACDP,MAAO,wBACPM,eAAgB,IAChBC,eAAgB,KACf,CACDP,MAAO,sBACPO,eAAgB,KACf,CACDP,MAAO,gCACPC,mBAAoB,aACnB,CACDD,MAAO,iCACPC,mBAAoB,mBACnB,CACDD,MAAO,sCACN,CACDA,MAAO,kDACN,CACDA,MAAO,yBACPG,OAAO,GACN,CACDH,MAAO,oBACPG,OAAO,GACN,CACDH,MAAO,yCACPG,OAAO,GACN,CACDH,MAAO,oCACPC,mBAAoB,UACpBE,OAAO,GACN,CACDH,MAAO,8BACPO,eAAgB,IAChBJ,OAAO,GACN,CACDH,MAAO,uBACPC,mBAAoB,cACpBC,aAAc,QACb,CACDF,MAAO,6CACPE,aAAc,QACb,CACDF,MAAO,wCACPG,OAAO,GACN,CACDH,MAAO,4BACPC,mBAAoB,UACpBE,OAAO,GACN,CACDH,MAAO,4BACPC,mBAAoB,UACpBE,OAAO,GACN,CACDH,MAAO,qCACPC,mBAAoB,WACpBE,OAAO,GACN,CACDH,MAAO,2CACPC,mBAAoB,gBACpBC,aAAc,SACb,CACDF,MAAO,kCACPC,mBAAoB,gBACpBC,aAAc,SACb,CACDF,MAAO,SACPC,mBAAoB,gBACpBC,aAAc,SACb,CACDF,MAAO,6CACPC,mBAAoB,gBACpBC,aAAc,SACb,CACDF,MAAO,oCACPC,mBAAoB,gBACpBC,aAAc,SACb,CACDF,MAAO,WACPC,mBAAoB,gBACpBC,aAAc,SACb,CACDF,MAAO,2CACPC,mBAAoB,gBACpBI,QAAQ,EACRH,aAAc,SACb,CACDF,MAAO,kCACPC,mBAAoB,gBACpBI,QAAQ,EACRH,aAAc,SACb,CACDF,MAAO,SACPC,mBAAoB,gBACpBI,QAAQ,EACRH,aAAc,SACb,CACDF,MAAO,0BACPG,OAAO,GACN,CACDH,MAAO,UACPO,eAAgB,IAChBJ,OAAO,GACN,CACDH,MAAO,WACPC,mBAAoB,+BACpBC,aAAc,SACb,CACDF,MAAO,iDACPE,aAAc,SACb,CACDF,MAAO,wCACPE,aAAc,SACb,CACDF,MAAO,iCACPE,aAAc,SACb,CACDF,MAAO,qCACPC,mBAAoB,eACpBC,aAAc,SACb,CACDF,MAAO,mBACPM,eAAgB,IAChBC,eAAgB,IAChBN,mBAAoB,eACpBC,aAAc,SACb,CACDF,MAAO,6BACPC,mBAAoB,oBACpBC,aAAc,SACb,CACDF,MAAO,oDACPC,mBAAoB,8BACpBC,aAAc,SACb,CACDF,MAAO,qBACPE,aAAc,SACb,CACDF,MAAO,qDACPC,mBAAoB,oBACpBI,QAAQ,EACRH,aAAc,SACb,CACDF,MAAO,oDACPC,mBAAoB,oBACpBC,aAAc,OACb,CACDF,MAAO,4BACPC,mBAAoB,aACpBC,aAAc,OACb,CACDF,MAAO,6BACPG,OAAO,GACN,CACDH,MAAO,2BACPC,mBAAoB,cACpBC,aAAc,QACb,CACDF,MAAO,wBACPC,mBAAoB,WACpBC,aAAc,QACb,CACDF,MAAO,6BACPG,OAAO,GACN,CACDH,MAAO,2CACPG,OAAO,GACN,CACDH,MAAO,4CACPG,OAAO,EACPE,QAAQ,GACP,CACDL,MAAO,yEACPC,mBAAoB,kBACnB,CACDD,MAAO,mDACPC,mBAAoB,UACnB,CACDD,MAAO,iBACN,CACDA,MAAO,+BACPG,OAAO,GACN,CACDH,MAAO,2BACPO,eAAgB,IAChBJ,OAAO,GACN,CACDH,MAAO,mCACPG,OAAO,GACN,CACDH,MAAO,WACPC,mBAAoB,iBACpBE,OAAO,GACN,CACDH,MAAO,gCACPC,mBAAoB,MACnB,CACDD,MAAO,yBACPC,mBAAoB,OAEtBO,WAAY,CAAC,CACXR,MAAO,mDACN,CACDA,MAAO,qDACN,CACDA,MAAO,kBACPS,kBAAmB,IACnBC,kBAAmB,KAClB,CACDV,MAAO,mBACPS,kBAAmB,IACnBC,kBAAmB,KAClB,CACDV,MAAO,kBACPS,kBAAmB,IACnBC,kBAAmB,KAClB,CACDV,MAAO,wBACPS,kBAAmB,IACnBC,kBAAmB,KAClB,CACDV,MAAO,sBACPU,kBAAmB,KAClB,CACDV,MAAO,gCACPW,eAAgB,WACf,CACDX,MAAO,yBACN,CACDA,MAAO,kCACPW,eAAgB,cACf,CACDX,MAAO,WACPW,eAAgB,oBACf,CACDX,MAAO,qBACPW,eAAgB,aACf,CACDX,MAAO,qBACPW,eAAgB,iBACf,CACDX,MAAO,kHACN,CACDA,MAAO,uCACPW,eAAgB,cACf,CACDX,MAAO,qBACPW,eAAgB,aACf,CACDX,MAAO,oBACPW,eAAgB,mBACf,CACDX,MAAO,qBACPW,eAAgB,gBACf,CACDX,MAAO,sCACN,CACDA,MAAO,oBACPW,eAAgB,kBACf,CACDX,MAAO,aACPW,eAAgB,kBACf,CACDX,MAAO,UACPW,eAAgB,cACf,CACDX,MAAO,0BACPG,OAAO,GACN,CACDH,MAAO,6CACPE,aAAc,SACb,CACDF,MAAO,2BACPE,aAAc,SACb,CACDF,MAAO,+CACPW,eAAgB,MAChBT,aAAc,SACb,CACDF,MAAO,4BACPW,eAAgB,MAChBT,aAAc,SACb,CACDF,MAAO,gBACPK,QAAQ,EACRH,aAAc,SACb,CACDF,MAAO,wDACPW,eAAgB,MAChBT,aAAc,SACb,CACDF,MAAO,kDACPW,eAAgB,aACf,CACDX,MAAO,kDACPG,OAAO,GACN,CACDH,MAAO,2BACPG,OAAO,GACN,CACDH,MAAO,+DACPG,OAAO,GACN,CACDH,MAAO,oCACPW,eAAgB,cACf,CACDX,MAAO,kCACPW,eAAgB,kBACf,CACDX,MAAO,kCACPW,eAAgB,mBACf,CACDX,MAAO,cACPW,eAAgB,aACf,CACDX,MAAO,yBACPW,eAAgB,cACf,CACDX,MAAO,UACPG,OAAO,GACN,CACDH,MAAO,mBACPW,eAAgB,cACf,CACDX,MAAO,kEACPW,eAAgB,gBAChBT,aAAc,OACb,CACDF,MAAO,kEACPW,eAAgB,gBAChBT,aAAc,OACb,CACDF,MAAO,2CACPW,eAAgB,uBAChBN,QAAQ,EACRH,aAAc,OACb,CACDF,MAAO,gBACPW,eAAgB,uBAChBN,QAAQ,EACRH,aAAc,OACb,CACDF,MAAO,kBACPW,eAAgB,gBAChBT,aAAc,OACb,CACDF,MAAO,8CACPW,eAAgB,SACf,CACDX,MAAO,oEACPG,OAAO,GACN,CACDH,MAAO,wEACPG,OAAO,GACN,CACDH,MAAO,4EACN,CACDA,MAAO,6FACN,CACDA,MAAO,cACPG,OAAO,IAETS,mBAAoB,CAAC,oBAAqB,aAAc,cACxDC,eAAgB,CAAC,CACfb,MAAO,6BACPc,mBAAoB,SACpBZ,aAAc,OACb,CACDF,MAAO,kDACPc,mBAAoB,SACpBZ,aAAc,OACb,CACDF,MAAO,2BACPc,mBAAoB,iBACpBZ,aAAc,OACb,CACDF,MAAO,gBACPc,mBAAoB,uBACpBZ,aAAc,OACb,CACDF,MAAO,mBACPc,mBAAoB,kBACpBZ,aAAc,OACb,CACDF,MAAO,2BACPc,mBAAoB,SACpBZ,aAAc,OACb,CACDF,MAAO,qBACPc,mBAAoB,SACpBZ,aAAc,OACb,CACDF,MAAO,qBACPc,mBAAoB,SACpBZ,aAAc,OACb,CACDF,MAAO,qBACPc,mBAAoB,SACpBZ,aAAc,OACb,CACDF,MAAO,oBACPc,mBAAoB,SACpBZ,aAAc,OACb,CACDF,MAAO,QACPE,aAAc,OACb,CACDF,MAAO,8BACPc,mBAAoB,cACpBX,OAAO,EACPD,aAAc,QACb,CACDF,MAAO,qFACN,CACDA,MAAO,kFACN,CACDA,MAAO,qFACN,CACDA,MAAO,2EACN,CACDA,MAAO,qDACN,CACDA,MAAO,iBACPc,mBAAoB,YACpBZ,aAAc,SACb,CACDF,MAAO,0BACPc,mBAAoB,WACpBZ,aAAc,SACb,CACDF,MAAO,0BACPc,mBAAoB,WACpBZ,aAAc,SACb,CACDF,MAAO,0BACPc,mBAAoB,WACpBZ,aAAc,SACb,CACDF,MAAO,0BACPc,mBAAoB,WACpBZ,aAAc,SACb,CACDF,MAAO,UACPc,mBAAoB,QACpBZ,aAAc,SACb,CACDF,MAAO,4BACPc,mBAAoB,sBACpBT,QAAQ,EACRH,aAAc,OACb,CACDF,MAAO,0BACPE,aAAc,OACb,CACDF,MAAO,wBACPc,mBAAoB,gBACpBZ,aAAc,OACb,CACDF,MAAO,wBACPc,mBAAoB,WACpBZ,aAAc,QACb,CACDF,MAAO,yBACPc,mBAAoB,YACpBZ,aAAc,QACb,CACDF,MAAO,6BACPc,mBAAoB,cACpBZ,aAAc,MACb,CACDF,MAAO,qCACPc,mBAAoB,aACpBZ,aAAc,MACb,CACDF,MAAO,qBACPc,mBAAoB,UACpBZ,aAAc,QACb,CACDF,MAAO,qBACPc,mBAAoB,eACpBZ,aAAc,QACb,CACDF,MAAO,iCACPc,mBAAoB,UACpBZ,aAAc,MACb,CACDF,MAAO,gBACPE,aAAc,UACb,CACDF,MAAO,WACPE,aAAc,UACb,CACDF,MAAO,4CACPc,mBAAoB,cACpBT,QAAQ,EACRH,aAAc,UACb,CACDF,MAAO,oBACPE,aAAc,SACb,CACDF,MAAO,UACPE,aAAc,SACb,CACDF,MAAO,UACPE,aAAc,SACb,CACDF,MAAO,sBACPE,aAAc,SACb,CACDF,MAAO,YACPE,aAAc,SACb,CACDF,MAAO,4BACPc,mBAAoB,YACnB,CACDd,MAAO,uBACPc,mBAAoB,UACpBZ,aAAc,QACb,CACDF,MAAO,uBACPc,mBAAoB,UACpBZ,aAAc,QACb,CACDF,MAAO,wBACPc,mBAAoB,UACpBX,OAAO,EACPD,aAAc,QACb,CACDF,MAAO,wBACPc,mBAAoB,UACpBX,OAAO,EACPD,aAAc,QACb,CACDF,MAAO,wBACPc,mBAAoB,UACpBZ,aAAc,QACb,CACDF,MAAO,wBACPc,mBAAoB,UACpBZ,aAAc,QACb,CACDF,MAAO,wBACPc,mBAAoB,UACpBX,OAAO,GACN,CACDH,MAAO,wBACPc,mBAAoB,UACpBX,OAAO,GACN,CACDH,MAAO,sBACPc,mBAAoB,UACpBX,OAAO,GACN,CACDH,MAAO,sBACPc,mBAAoB,UACpBZ,aAAc,QACb,CACDF,MAAO,8BACPc,mBAAoB,YACpBX,OAAO,GACN,CACDH,MAAO,4BACPc,mBAAoB,YACpBX,OAAO,GACN,CACDH,MAAO,wBACPc,mBAAoB,YACpBX,OAAO,GACN,CACDH,MAAO,yBACPc,mBAAoB,qBACpBX,OAAO,GACN,CACDH,MAAO,0BACPc,mBAAoB,YACpBX,OAAO,GACN,CACDH,MAAO,2BACPc,mBAAoB,aACpBX,OAAO,GACN,CACDH,MAAO,uBACPc,mBAAoB,aACpBX,OAAO,GACN,CACDH,MAAO,0BACPc,mBAAoB,YACpBZ,aAAc,UACb,CACDF,MAAO,0BACPc,mBAAoB,YACpBZ,aAAc,UACb,CACDF,MAAO,oBACPc,mBAAoB,QACpBZ,aAAc,MACb,CACDF,MAAO,sBACPc,mBAAoB,QACpBZ,aAAc,MACb,CACDF,MAAO,uBACPc,mBAAoB,QACpBZ,aAAc,MACb,CACDF,MAAO,uBACPc,mBAAoB,QACpBZ,aAAc,MACb,CACDF,MAAO,oBACPc,mBAAoB,QACpBZ,aAAc,MACb,CACDF,MAAO,4BACPc,mBAAoB,QACpBZ,aAAc,MACb,CACDF,MAAO,sBACPc,mBAAoB,QACpBZ,aAAc,MACb,CACDF,MAAO,uBACPc,mBAAoB,QACpBZ,aAAc,MACb,CACDF,MAAO,mBACPc,mBAAoB,QACpBZ,aAAc,MACb,CACDF,MAAO,8BACPc,mBAAoB,gBACnB,CACDd,MAAO,8BACPc,mBAAoB,gBACnB,CACDd,MAAO,8BACPE,aAAc,YACb,CACDF,MAAO,wBACPc,mBAAoB,cACpBZ,aAAc,YACb,CACDF,MAAO,uBACPc,mBAAoB,cACpBZ,aAAc,YACb,CACDF,MAAO,wBACPc,mBAAoB,aACpBZ,aAAc,WACb,CACDF,MAAO,yBACPc,mBAAoB,aACpBZ,aAAc,WACb,CACDF,MAAO,4BACPc,mBAAoB,aACpBZ,aAAc,WACb,CACDF,MAAO,+BACPc,mBAAoB,aACpBZ,aAAc,WACb,CACDF,MAAO,gCACPc,mBAAoB,cACpBX,OAAO,GACN,CACDH,MAAO,gCACPc,mBAAoB,cACpBX,OAAO,GACN,CACDH,MAAO,wHACPc,mBAAoB,sBACnB,CACDd,MAAO,4gBACPc,mBAAoB,yBACnB,CACDd,MAAO,4hBACPc,mBAAoB,yBACnB,CACDd,MAAO,siBACPc,mBAAoB,yBACnB,CACDd,MAAO,wjBACPc,mBAAoB,yBACnB,CACDd,MAAO,4XACPc,mBAAoB,WAEtBC,wBAAyB,CAAC,iBAAkB,eAAgB,aAAc,gBAAiB,QAAS,YAAa,uBAAwB,QAAS,aAAc,OAAQ,OAAQ,UAAW,QAAS,QAAS,WAAY,UAAW,SAAU,eAAgB,OAAQ,OAAQ,aAAc,WAAY,SAAU,WAAY,UAAW,SAAU,UAAW,OAAQ,gBAAiB,oBAAqB,aAAc,mBAOjY,WACzB,IAAIC,EAAU,GAMd,OAJArB,EAAMC,QAAQjB,KAAI,SAAUsC,GAC1BD,EAAQC,GAAU,MAGbD,EAPkB,GAW3BrB,EAAMuB,SAAW,WACf,IAAIF,EAAU,GAMd,OAJArB,EAAME,MAAMlB,KAAI,SAAUwC,GACxBH,EAAQG,GAAQ,MAGXH,EAPQ,GAWjB,IAAII,EAAa3C,MAAMC,UAGnB2C,GAFWjC,OAAOV,UACN4C,SAAS5C,UACL0C,EAAWG,SAG3BC,GAFgBJ,EAAWK,QAEpB,SAAcC,EAAIC,GAG3B,IAFA,IAAIC,EAAM,GAEDC,EAAI,EAAGA,EAAIF,EAAIrC,UACtBsC,EAAMD,EAAIE,GAAGH,IADiBG,KAQhC,OAAOD,IAwBLE,EAAOP,QAAU,SAAiBI,EAAKI,EAAUC,GACnD,GAAW,MAAPL,EAEJ,GAAIN,GAAiBM,EAAIJ,UAAYF,EACnCM,EAAIJ,QAAQQ,EAAUC,QACjB,GAAIL,EAAIrC,UAAYqC,EAAIrC,OAC7B,IAAK,IAAIuC,EAAI,EAAGI,EAAIN,EAAIrC,OAAQuC,EAAII,EAAGJ,IACrCE,EAAStC,KAAKuC,EAASL,EAAIE,GAAIA,EAAGF,QAGpC,IAAK,IAAIO,KAAOP,EACVQ,EAAEC,IAAIT,EAAKO,IACbH,EAAStC,KAAKuC,EAASL,EAAIO,GAAMA,EAAKP,IAiB1CU,EAAQ,SAAeC,GACzB,SAAUA,GAAqB,oBAAPA,GAA6B,MAAPA,IAI5CC,EAAkB,SAAyBZ,GAC7C,IAAIa,EAAS,GAiBb,OAdIH,EAFJV,EAAMA,GAAO,KAGPU,EAAMV,EAAIc,SACZD,GAAUb,EAAIc,MAEVJ,EAAMV,EAAIe,SACZF,GAAU,IAAMb,EAAIe,MAEhBL,EAAMV,EAAIgB,SACZH,GAAU,IAAMb,EAAIgB,SAMrBH,GAILI,EAAW,SAAkBjB,GAE/B,IAAIkB,EAASN,EADbZ,EAAMA,GAAO,IAGb,OADIkB,IAAQA,EAAS,IAAMA,GACpBlB,GAAOU,EAAMV,EAAImB,QAAUnB,EAAImB,OAASD,EAAS,IA0G1D,OAtGAlD,EAAMoD,MAAQ,SAAUrB,GAEtB,IAAI9B,EAAU,SAAiBuB,GAC7B,OAAOxB,EAAMG,QAAQqB,EAAO,YAAYxC,KAAI,SAAUgD,GACpD,IAAIqB,EAAS,IAAIC,OAAOtB,EAAI3B,OACxBkD,EAAMvB,GAAc,YAATR,EAAqB,SAAWA,GAAQ,gBACnDgC,EAAYxB,EAAIyB,0BAepB,OAbA,SAAgB1B,GACd,IAAI2B,EAAI3B,EAAG4B,MAAMN,GACjB,IAAKK,EAAG,OAAO,KACf,IAAIzB,EAAM,GAOV,OANAA,EAAIkB,QAAUI,EAAMA,EAAIK,QAAQ,KAAMF,EAAE,IAAMA,EAAE,KAAO,QACvDzB,EAAIa,MAAQe,SAASL,GAAwBE,EAAE,KAAO,KACtDzB,EAAIc,MAAQW,EAAE,GAAKG,SAASH,EAAE,IAAM,KACpCzB,EAAIe,MAAQU,EAAE,GAAKG,SAASH,EAAE,IAAM,KACpCzB,EAAIvB,OAASsB,EAAItB,OACjBuB,EAAI6B,IAAM9B,EAAIzB,cAAgB,KACvB0B,OAWT7B,EAAkBH,EAAQ,WAE1BY,EAAaZ,EAAQ,MAErBiB,EAAiBjB,EAAQ,UAEzB8D,EAAI,IATQ,aAWhBA,EAAEC,OAASjC,EAEXgC,EAAEE,QAAUpC,EAAKE,EAAI3B,GAEjBsC,EAAMqB,EAAEE,UACVF,EAAEE,QAAQC,KAAOjB,EAASc,EAAEE,SAC5BF,EAAEE,QAAQE,QAAUvB,EAAgBmB,EAAEE,UAEtCF,EAAEE,QAAU,GAIdF,EAAEK,GAAKvC,EAAKE,EAAIlB,GAEZ6B,EAAMqB,EAAEK,KACVL,EAAEK,GAAGF,KAAOjB,EAASc,EAAEK,IACvBL,EAAEK,GAAGD,QAAUvB,EAAgBmB,EAAEK,KAEjCL,EAAEK,GAAK,GAITL,EAAEM,OAASxC,EAAKE,EAAIb,GAEhBwB,EAAMqB,EAAEM,SACVN,EAAEM,OAAOH,KAAOjB,EAASc,EAAEM,QAC3BN,EAAEM,OAAOF,QAAUvB,EAAgBmB,EAAEM,SAErCN,EAAEM,OAAS,CACT3D,QAAQ,EACRyC,OAAQ,SAKZ,IA5J2BmB,EAAKC,EA4J5BC,EAAgB,GAEUxE,EAAMG,QAAQiB,wBAAwBpC,KAAI,SAAU2D,GAChF6B,EAAc7B,IAAO,KAGE3C,EAAMG,QAAQc,mBAAmBjC,KAAI,SAAU2D,GACtE6B,EAAc7B,IAAO,KAmBvB,MAfyB,WAArBoB,EAAEE,QAAQd,OACZY,EAAEM,OAAO7C,KAAO,SACPuC,EAAEE,QAAQvD,QAAUqD,EAAEK,GAAG1D,QAAUqD,EAAEM,OAAO3D,OACrDqD,EAAEM,OAAO7C,KAAO,SACPgD,EAAcC,eAAeV,EAAEE,QAAQd,QAChDY,EAAEM,OAAO7C,KAAO,SAEhBuC,EAAEM,OAAO7C,KAAO,UAIlBuC,EAAEM,OAAO9D,aAAewD,EAAEE,QAAQH,KAAOC,EAAEK,GAAGN,KAAOC,EAAEM,OAAOP,KAAO,KAlL1CQ,EAoLpB,CAACP,EAAEE,QAASF,EAAEK,GAAIL,EAAEM,QApLKE,EAoLI,CAAC,SAAU,OAnL/CpC,EAAKmC,GAAK,SAAUtC,GAClBG,EAAKoC,GAAO,SAAUG,UACb1C,EAAI0C,SAmLRX,GAIF/D,EArnCkB,GA8nCY2E,EAAOC,UAC1CA,EAAUD,EAAOC,QAAU7E,GAG7B6E,EAAQ7E,OAASA,OApsCrB,KA4sCI,WAAiB8E,GACf,OAAO9E,GACR,8BA9sCL,CAgtCG+E","file":"static/js/0.0cda63b6.chunk.js","sourcesContent":["/**\n * Detect.js: User-Agent Parser\n * https://github.com/darcyclarke/Detect.js\n * Dual licensed under the MIT and GPL licenses.\n *\n * @version 2.2.2\n * @author Darcy Clarke\n * @url http://darcyclarke.me\n * @createdat Mon Oct 26 2015 08:21:54 GMT-0200 (Horário brasileiro de verão)\n *\n * Based on UA-Parser (https://github.com/tobie/ua-parser) by Tobie Langel\n *\n * Example Usage:\n * var agentInfo = detect.parse(navigator.userAgent);\n * console.log(agentInfo.browser.family); // Chrome\n *\n */\n(function (root, undefined) {\n  // Shim Array.prototype.map if necessary\n  // Production steps of ECMA-262, Edition 5, 15.4.4.19\n  // Reference: http://es5.github.com/#x15.4.4.19\n  if (!Array.prototype.map) {\n    Array.prototype.map = function (callback, thisArg) {\n      var T, A, k;\n\n      if (this == null) {\n        throw new TypeError(\" this is null or not defined\");\n      } // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n\n\n      var O = Object(this); // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n      // 3. Let len be ToUint32(lenValue).\n\n      var len = O.length >>> 0; // 4. If IsCallable(callback) is false, throw a TypeError exception.\n      // See: http://es5.github.com/#x9.11\n\n      if (typeof callback !== \"function\") {\n        throw new TypeError(callback + \" is not a function\");\n      } // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n\n\n      if (thisArg) {\n        T = thisArg;\n      } // 6. Let A be a new array created as if by the expression new Array(len) where Array is\n      // the standard built-in constructor with that name and len is the value of len.\n\n\n      A = new Array(len); // 7. Let k be 0\n\n      k = 0; // 8. Repeat, while k < len\n\n      while (k < len) {\n        var kValue, mappedValue; // a. Let Pk be ToString(k).\n        //   This is implicit for LHS operands of the in operator\n        // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n        //   This step can be combined with c\n        // c. If kPresent is true, then\n\n        if (k in O) {\n          // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n          kValue = O[k]; // ii. Let mappedValue be the result of calling the Call internal method of callback\n          // with T as the this value and argument list containing kValue, k, and O.\n\n          mappedValue = callback.call(T, kValue, k, O); // iii. Call the DefineOwnProperty internal method of A with arguments\n          // Pk, Property Descriptor {Value: mappedValue, : true, Enumerable: true, Configurable: true},\n          // and false.\n          // In browsers that support Object.defineProperty, use the following:\n          // Object.defineProperty(A, Pk, { value: mappedValue, writable: true, enumerable: true, configurable: true });\n          // For best browser support, use the following:\n\n          A[k] = mappedValue;\n        } // d. Increase k by 1.\n\n\n        k++;\n      } // 9. return A\n\n\n      return A;\n    };\n  } // Detect\n\n\n  var detect = root.detect = function () {\n    // Context\n    var _this = function _this() {}; // Regexes\n\n\n    var regexes = {\n      browser_parsers: [{\n        regex: \"^(Opera)/(\\\\d+)\\\\.(\\\\d+) \\\\(Nintendo Wii\",\n        family_replacement: \"Wii\",\n        manufacturer: \"Nintendo\"\n      }, {\n        regex: \"(SeaMonkey|Camino)/(\\\\d+)\\\\.(\\\\d+)\\\\.?([ab]?\\\\d+[a-z]*)\",\n        family_replacement: \"Camino\",\n        other: true\n      }, {\n        regex: \"(Pale[Mm]oon)/(\\\\d+)\\\\.(\\\\d+)\\\\.?(\\\\d+)?\",\n        family_replacement: \"Pale Moon (Firefox Variant)\",\n        other: true\n      }, {\n        regex: \"(Fennec)/(\\\\d+)\\\\.(\\\\d+)\\\\.?([ab]?\\\\d+[a-z]*)\",\n        family_replacement: \"Firefox Mobile\"\n      }, {\n        regex: \"(Fennec)/(\\\\d+)\\\\.(\\\\d+)(pre)\",\n        family_replacment: \"Firefox Mobile\"\n      }, {\n        regex: \"(Fennec)/(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Firefox Mobile\"\n      }, {\n        regex: \"Mobile.*(Firefox)/(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Firefox Mobile\"\n      }, {\n        regex: \"(Namoroka|Shiretoko|Minefield)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+(?:pre)?)\",\n        family_replacement: \"Firefox ($1)\"\n      }, {\n        regex: \"(Firefox)/(\\\\d+)\\\\.(\\\\d+)(a\\\\d+[a-z]*)\",\n        family_replacement: \"Firefox Alpha\"\n      }, {\n        regex: \"(Firefox)/(\\\\d+)\\\\.(\\\\d+)(b\\\\d+[a-z]*)\",\n        family_replacement: \"Firefox Beta\"\n      }, {\n        regex: \"(Firefox)-(?:\\\\d+\\\\.\\\\d+)?/(\\\\d+)\\\\.(\\\\d+)(a\\\\d+[a-z]*)\",\n        family_replacement: \"Firefox Alpha\"\n      }, {\n        regex: \"(Firefox)-(?:\\\\d+\\\\.\\\\d+)?/(\\\\d+)\\\\.(\\\\d+)(b\\\\d+[a-z]*)\",\n        family_replacement: \"Firefox Beta\"\n      }, {\n        regex: \"(Namoroka|Shiretoko|Minefield)/(\\\\d+)\\\\.(\\\\d+)([ab]\\\\d+[a-z]*)?\",\n        family_replacement: \"Firefox ($1)\"\n      }, {\n        regex: \"(Firefox).*Tablet browser (\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"MicroB\",\n        tablet: true\n      }, {\n        regex: \"(MozillaDeveloperPreview)/(\\\\d+)\\\\.(\\\\d+)([ab]\\\\d+[a-z]*)?\"\n      }, {\n        regex: \"(Flock)/(\\\\d+)\\\\.(\\\\d+)(b\\\\d+?)\",\n        family_replacement: \"Flock\",\n        other: true\n      }, {\n        regex: \"(RockMelt)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Rockmelt\",\n        other: true\n      }, {\n        regex: \"(Navigator)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Netscape\"\n      }, {\n        regex: \"(Navigator)/(\\\\d+)\\\\.(\\\\d+)([ab]\\\\d+)\",\n        family_replacement: \"Netscape\"\n      }, {\n        regex: \"(Netscape6)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Netscape\"\n      }, {\n        regex: \"(MyIBrow)/(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"My Internet Browser\",\n        other: true\n      }, {\n        regex: \"(Opera Tablet).*Version/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?\",\n        family_replacement: \"Opera Tablet\",\n        tablet: true\n      }, {\n        regex: \"(Opera)/.+Opera Mobi.+Version/(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Opera Mobile\"\n      }, {\n        regex: \"Opera Mobi\",\n        family_replacement: \"Opera Mobile\"\n      }, {\n        regex: \"(Opera Mini)/(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Opera Mini\"\n      }, {\n        regex: \"(Opera Mini)/att/(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Opera Mini\"\n      }, {\n        regex: \"(Opera)/9.80.*Version/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?\",\n        family_replacement: \"Opera\"\n      }, {\n        regex: \"(OPR)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?\",\n        family_replacement: \"Opera\"\n      }, {\n        regex: \"(webOSBrowser)/(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"webOS\"\n      }, {\n        regex: \"(webOS)/(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"webOS\"\n      }, {\n        regex: \"(wOSBrowser).+TouchPad/(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"webOS TouchPad\"\n      }, {\n        regex: \"(luakit)\",\n        family_replacement: \"LuaKit\",\n        other: true\n      }, {\n        regex: \"(Lightning)/(\\\\d+)\\\\.(\\\\d+)([ab]?\\\\d+[a-z]*)\",\n        family_replacement: \"Lightning\",\n        other: true\n      }, {\n        regex: \"(Firefox)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+(?:pre)?) \\\\(Swiftfox\\\\)\",\n        family_replacement: \"Swiftfox\",\n        other: true\n      }, {\n        regex: \"(Firefox)/(\\\\d+)\\\\.(\\\\d+)([ab]\\\\d+[a-z]*)? \\\\(Swiftfox\\\\)\",\n        family_replacement: \"Swiftfox\",\n        other: true\n      }, {\n        regex: \"rekonq\",\n        family_replacement: \"Rekonq\",\n        other: true\n      }, {\n        regex: \"(conkeror|Conkeror)/(\\\\d+)\\\\.(\\\\d+)\\\\.?(\\\\d+)?\",\n        family_replacement: \"Conkeror\",\n        other: true\n      }, {\n        regex: \"(konqueror)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Konqueror\",\n        other: true\n      }, {\n        regex: \"(WeTab)-Browser\",\n        family_replacement: \"WeTab\",\n        other: true\n      }, {\n        regex: \"(Comodo_Dragon)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Comodo Dragon\",\n        other: true\n      }, {\n        regex: \"(YottaaMonitor)\",\n        family_replacement: \"Yottaa Monitor\",\n        other: true\n      }, {\n        regex: \"(Kindle)/(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Kindle\"\n      }, {\n        regex: \"(Symphony) (\\\\d+).(\\\\d+)\",\n        family_replacement: \"Symphony\",\n        other: true\n      }, {\n        regex: \"Minimo\",\n        family_replacement: \"Minimo\",\n        other: true\n      }, {\n        regex: \"(Edge)/(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Edge\"\n      }, {\n        regex: \"(CrMo)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Chrome Mobile\"\n      }, {\n        regex: \"(CriOS)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Chrome Mobile iOS\"\n      }, {\n        regex: \"(Chrome)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+) Mobile\",\n        family_replacement: \"Chrome Mobile\"\n      }, {\n        regex: \"(chromeframe)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Chrome Frame\"\n      }, {\n        regex: \"(UC Browser)(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"UC Browser\",\n        other: true\n      }, {\n        regex: \"(SLP Browser)/(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Tizen Browser\",\n        other: true\n      }, {\n        regex: \"(Epiphany)/(\\\\d+)\\\\.(\\\\d+).(\\\\d+)\",\n        family_replacement: \"Epiphany\",\n        other: true\n      }, {\n        regex: \"(SE 2\\\\.X) MetaSr (\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Sogou Explorer\",\n        other: true\n      }, {\n        regex: \"(Pingdom.com_bot_version_)(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"PingdomBot\",\n        other: true\n      }, {\n        regex: \"(facebookexternalhit)/(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"FacebookBot\"\n      }, {\n        regex: \"(Twitterbot)/(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"TwitterBot\"\n      }, {\n        regex: \"(AdobeAIR|Chromium|FireWeb|Jasmine|ANTGalio|Midori|Fresco|Lobo|PaleMoon|Maxthon|Lynx|OmniWeb|Dillo|Camino|Demeter|Fluid|Fennec|Shiira|Sunrise|Chrome|Flock|Netscape|Lunascape|WebPilot|NetFront|Netfront|Konqueror|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|Opera Mini|iCab|NetNewsWire|ThunderBrowse|Iron|Iris|UP\\\\.Browser|Bunjaloo|Google Earth|Raven for Mac)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\"\n      }, {\n        regex: \"(Bolt|Jasmine|IceCat|Skyfire|Midori|Maxthon|Lynx|Arora|IBrowse|Dillo|Camino|Shiira|Fennec|Phoenix|Chrome|Flock|Netscape|Lunascape|Epiphany|WebPilot|Opera Mini|Opera|NetFront|Netfront|Konqueror|Googlebot|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|iCab|NetNewsWire|Iron|Space Bison|Stainless|Orca|Dolfin|BOLT|Minimo|Tizen Browser|Polaris)/(\\\\d+)\\\\.(\\\\d+)\"\n      }, {\n        regex: \"(iRider|Crazy Browser|SkipStone|iCab|Lunascape|Sleipnir|Maemo Browser) (\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\"\n      }, {\n        regex: \"(iCab|Lunascape|Opera|Android|Jasmine|Polaris|BREW) (\\\\d+)\\\\.(\\\\d+)\\\\.?(\\\\d+)?\"\n      }, {\n        regex: \"(Android) Donut\",\n        v2_replacement: \"2\",\n        v1_replacement: \"1\"\n      }, {\n        regex: \"(Android) Eclair\",\n        v2_replacement: \"1\",\n        v1_replacement: \"2\"\n      }, {\n        regex: \"(Android) Froyo\",\n        v2_replacement: \"2\",\n        v1_replacement: \"2\"\n      }, {\n        regex: \"(Android) Gingerbread\",\n        v2_replacement: \"3\",\n        v1_replacement: \"2\"\n      }, {\n        regex: \"(Android) Honeycomb\",\n        v1_replacement: \"3\"\n      }, {\n        regex: \"(IEMobile)[ /](\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"IE Mobile\"\n      }, {\n        regex: \"(MSIE) (\\\\d+)\\\\.(\\\\d+).*XBLWP7\",\n        family_replacement: \"IE Large Screen\"\n      }, {\n        regex: \"(Firefox)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\"\n      }, {\n        regex: \"(Firefox)/(\\\\d+)\\\\.(\\\\d+)(pre|[ab]\\\\d+[a-z]*)?\"\n      }, {\n        regex: \"(Obigo)InternetBrowser\",\n        other: true\n      }, {\n        regex: \"(Obigo)\\\\-Browser\",\n        other: true\n      }, {\n        regex: \"(Obigo|OBIGO)[^\\\\d]*(\\\\d+)(?:.(\\\\d+))?\",\n        other: true\n      }, {\n        regex: \"(MAXTHON|Maxthon) (\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Maxthon\",\n        other: true\n      }, {\n        regex: \"(Maxthon|MyIE2|Uzbl|Shiira)\",\n        v1_replacement: \"0\",\n        other: true\n      }, {\n        regex: \"(PLAYSTATION) (\\\\d+)\",\n        family_replacement: \"PlayStation\",\n        manufacturer: \"Sony\"\n      }, {\n        regex: \"(PlayStation Portable)[^\\\\d]+(\\\\d+).(\\\\d+)\",\n        manufacturer: \"Sony\"\n      }, {\n        regex: \"(BrowseX) \\\\((\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",\n        other: true\n      }, {\n        regex: \"(POLARIS)/(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Polaris\",\n        other: true\n      }, {\n        regex: \"(Embider)/(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Polaris\",\n        other: true\n      }, {\n        regex: \"(BonEcho)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Bon Echo\",\n        other: true\n      }, {\n        regex: \"(iPod).+Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Mobile Safari\",\n        manufacturer: \"Apple\"\n      }, {\n        regex: \"(iPod).*Version/(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Mobile Safari\",\n        manufacturer: \"Apple\"\n      }, {\n        regex: \"(iPod)\",\n        family_replacement: \"Mobile Safari\",\n        manufacturer: \"Apple\"\n      }, {\n        regex: \"(iPhone).*Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Mobile Safari\",\n        manufacturer: \"Apple\"\n      }, {\n        regex: \"(iPhone).*Version/(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Mobile Safari\",\n        manufacturer: \"Apple\"\n      }, {\n        regex: \"(iPhone)\",\n        family_replacement: \"Mobile Safari\",\n        manufacturer: \"Apple\"\n      }, {\n        regex: \"(iPad).*Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Mobile Safari\",\n        tablet: true,\n        manufacturer: \"Apple\"\n      }, {\n        regex: \"(iPad).*Version/(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Mobile Safari\",\n        tablet: true,\n        manufacturer: \"Apple\"\n      }, {\n        regex: \"(iPad)\",\n        family_replacement: \"Mobile Safari\",\n        tablet: true,\n        manufacturer: \"Apple\"\n      }, {\n        regex: \"(AvantGo) (\\\\d+).(\\\\d+)\",\n        other: true\n      }, {\n        regex: \"(Avant)\",\n        v1_replacement: \"1\",\n        other: true\n      }, {\n        regex: \"^(Nokia)\",\n        family_replacement: \"Nokia Services (WAP) Browser\",\n        manufacturer: \"Nokia\"\n      }, {\n        regex: \"(NokiaBrowser)/(\\\\d+)\\\\.(\\\\d+).(\\\\d+)\\\\.(\\\\d+)\",\n        manufacturer: \"Nokia\"\n      }, {\n        regex: \"(NokiaBrowser)/(\\\\d+)\\\\.(\\\\d+).(\\\\d+)\",\n        manufacturer: \"Nokia\"\n      }, {\n        regex: \"(NokiaBrowser)/(\\\\d+)\\\\.(\\\\d+)\",\n        manufacturer: \"Nokia\"\n      }, {\n        regex: \"(BrowserNG)/(\\\\d+)\\\\.(\\\\d+).(\\\\d+)\",\n        family_replacement: \"NokiaBrowser\",\n        manufacturer: \"Nokia\"\n      }, {\n        regex: \"(Series60)/5\\\\.0\",\n        v2_replacement: \"0\",\n        v1_replacement: \"7\",\n        family_replacement: \"NokiaBrowser\",\n        manufacturer: \"Nokia\"\n      }, {\n        regex: \"(Series60)/(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Nokia OSS Browser\",\n        manufacturer: \"Nokia\"\n      }, {\n        regex: \"(S40OviBrowser)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Nokia Series 40 Ovi Browser\",\n        manufacturer: \"Nokia\"\n      }, {\n        regex: \"(Nokia)[EN]?(\\\\d+)\",\n        manufacturer: \"Nokia\"\n      }, {\n        regex: \"(PlayBook).+RIM Tablet OS (\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Blackberry WebKit\",\n        tablet: true,\n        manufacturer: \"Nokia\"\n      }, {\n        regex: \"(Black[bB]erry).+Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Blackberry WebKit\",\n        manufacturer: \"RIM\"\n      }, {\n        regex: \"(Black[bB]erry)\\\\s?(\\\\d+)\",\n        family_replacement: \"Blackberry\",\n        manufacturer: \"RIM\"\n      }, {\n        regex: \"(OmniWeb)/v(\\\\d+)\\\\.(\\\\d+)\",\n        other: true\n      }, {\n        regex: \"(Blazer)/(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Palm Blazer\",\n        manufacturer: \"Palm\"\n      }, {\n        regex: \"(Pre)/(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"Palm Pre\",\n        manufacturer: \"Palm\"\n      }, {\n        regex: \"(Links) \\\\((\\\\d+)\\\\.(\\\\d+)\",\n        other: true\n      }, {\n        regex: \"(QtWeb) Internet Browser/(\\\\d+)\\\\.(\\\\d+)\",\n        other: true\n      }, {\n        regex: \"(Silk)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.([0-9\\\\-]+))?\",\n        other: true,\n        tablet: true\n      }, {\n        regex: \"(AppleWebKit)/(\\\\d+)\\\\.?(\\\\d+)?\\\\+ .* Version/\\\\d+\\\\.\\\\d+.\\\\d+ Safari/\",\n        family_replacement: \"WebKit Nightly\"\n      }, {\n        regex: \"(Version)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?.*Safari/\",\n        family_replacement: \"Safari\"\n      }, {\n        regex: \"(Safari)/\\\\d+\"\n      }, {\n        regex: \"(OLPC)/Update(\\\\d+)\\\\.(\\\\d+)\",\n        other: true\n      }, {\n        regex: \"(OLPC)/Update()\\\\.(\\\\d+)\",\n        v1_replacement: \"0\",\n        other: true\n      }, {\n        regex: \"(SEMC\\\\-Browser)/(\\\\d+)\\\\.(\\\\d+)\",\n        other: true\n      }, {\n        regex: \"(Teleca)\",\n        family_replacement: \"Teleca Browser\",\n        other: true\n      }, {\n        regex: \"Trident(.*)rv.(\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"IE\"\n      }, {\n        regex: \"(MSIE) (\\\\d+)\\\\.(\\\\d+)\",\n        family_replacement: \"IE\"\n      }],\n      os_parsers: [{\n        regex: \"(Android) (\\\\d+)\\\\.(\\\\d+)(?:[.\\\\-]([a-z0-9]+))?\"\n      }, {\n        regex: \"(Android)\\\\-(\\\\d+)\\\\.(\\\\d+)(?:[.\\\\-]([a-z0-9]+))?\"\n      }, {\n        regex: \"(Android) Donut\",\n        os_v2_replacement: \"2\",\n        os_v1_replacement: \"1\"\n      }, {\n        regex: \"(Android) Eclair\",\n        os_v2_replacement: \"1\",\n        os_v1_replacement: \"2\"\n      }, {\n        regex: \"(Android) Froyo\",\n        os_v2_replacement: \"2\",\n        os_v1_replacement: \"2\"\n      }, {\n        regex: \"(Android) Gingerbread\",\n        os_v2_replacement: \"3\",\n        os_v1_replacement: \"2\"\n      }, {\n        regex: \"(Android) Honeycomb\",\n        os_v1_replacement: \"3\"\n      }, {\n        regex: \"(Silk-Accelerated=[a-z]{4,5})\",\n        os_replacement: \"Android\"\n      }, {\n        regex: \"(Windows Phone 6\\\\.5)\"\n      }, {\n        regex: \"(Windows (?:NT 5\\\\.2|NT 5\\\\.1))\",\n        os_replacement: \"Windows XP\"\n      }, {\n        regex: \"(XBLWP7)\",\n        os_replacement: \"Windows Phone OS\"\n      }, {\n        regex: \"(Windows NT 6\\\\.1)\",\n        os_replacement: \"Windows 7\"\n      }, {\n        regex: \"(Windows NT 6\\\\.0)\",\n        os_replacement: \"Windows Vista\"\n      }, {\n        regex: \"(Windows 98|Windows XP|Windows ME|Windows 95|Windows CE|Windows 7|Windows NT 4\\\\.0|Windows Vista|Windows 2000)\"\n      }, {\n        regex: \"(Windows NT 6\\\\.4|Windows NT 10\\\\.0)\",\n        os_replacement: \"Windows 10\"\n      }, {\n        regex: \"(Windows NT 6\\\\.2)\",\n        os_replacement: \"Windows 8\"\n      }, {\n        regex: \"(Windows Phone 8)\",\n        os_replacement: \"Windows Phone 8\"\n      }, {\n        regex: \"(Windows NT 5\\\\.0)\",\n        os_replacement: \"Windows 2000\"\n      }, {\n        regex: \"(Windows Phone OS) (\\\\d+)\\\\.(\\\\d+)\"\n      }, {\n        regex: \"(Windows ?Mobile)\",\n        os_replacement: \"Windows Mobile\"\n      }, {\n        regex: \"(WinNT4.0)\",\n        os_replacement: \"Windows NT 4.0\"\n      }, {\n        regex: \"(Win98)\",\n        os_replacement: \"Windows 98\"\n      }, {\n        regex: \"(Tizen)/(\\\\d+)\\\\.(\\\\d+)\",\n        other: true\n      }, {\n        regex: \"(Mac OS X) (\\\\d+)[_.](\\\\d+)(?:[_.](\\\\d+))?\",\n        manufacturer: \"Apple\"\n      }, {\n        regex: \"(?:PPC|Intel) (Mac OS X)\",\n        manufacturer: \"Apple\"\n      }, {\n        regex: \"(CPU OS|iPhone OS) (\\\\d+)_(\\\\d+)(?:_(\\\\d+))?\",\n        os_replacement: \"iOS\",\n        manufacturer: \"Apple\"\n      }, {\n        regex: \"(iPhone|iPad|iPod); Opera\",\n        os_replacement: \"iOS\",\n        manufacturer: \"Apple\"\n      }, {\n        regex: \"(iPad); Opera\",\n        tablet: true,\n        manufacturer: \"Apple\"\n      }, {\n        regex: \"(iPhone|iPad|iPod).*Mac OS X.*Version/(\\\\d+)\\\\.(\\\\d+)\",\n        os_replacement: \"iOS\",\n        manufacturer: \"Apple\"\n      }, {\n        regex: \"(CrOS) [a-z0-9_]+ (\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?\",\n        os_replacement: \"Chrome OS\"\n      }, {\n        regex: \"(Debian)-(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?\",\n        other: true\n      }, {\n        regex: \"(Linux Mint)(?:/(\\\\d+))?\",\n        other: true\n      }, {\n        regex: \"(Mandriva)(?: Linux)?/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?\",\n        other: true\n      }, {\n        regex: \"(Symbian[Oo][Ss])/(\\\\d+)\\\\.(\\\\d+)\",\n        os_replacement: \"Symbian OS\"\n      }, {\n        regex: \"(Symbian/3).+NokiaBrowser/7\\\\.3\",\n        os_replacement: \"Symbian^3 Anna\"\n      }, {\n        regex: \"(Symbian/3).+NokiaBrowser/7\\\\.4\",\n        os_replacement: \"Symbian^3 Belle\"\n      }, {\n        regex: \"(Symbian/3)\",\n        os_replacement: \"Symbian^3\"\n      }, {\n        regex: \"(Series 60|SymbOS|S60)\",\n        os_replacement: \"Symbian OS\"\n      }, {\n        regex: \"(MeeGo)\",\n        other: true\n      }, {\n        regex: \"Symbian [Oo][Ss]\",\n        os_replacement: \"Symbian OS\"\n      }, {\n        regex: \"(Black[Bb]erry)[0-9a-z]+/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?\",\n        os_replacement: \"BlackBerry OS\",\n        manufacturer: \"RIM\"\n      }, {\n        regex: \"(Black[Bb]erry).+Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?\",\n        os_replacement: \"BlackBerry OS\",\n        manufacturer: \"RIM\"\n      }, {\n        regex: \"(RIM Tablet OS) (\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",\n        os_replacement: \"BlackBerry Tablet OS\",\n        tablet: true,\n        manufacturer: \"RIM\"\n      }, {\n        regex: \"(Play[Bb]ook)\",\n        os_replacement: \"BlackBerry Tablet OS\",\n        tablet: true,\n        manufacturer: \"RIM\"\n      }, {\n        regex: \"(Black[Bb]erry)\",\n        os_replacement: \"Blackberry OS\",\n        manufacturer: \"RIM\"\n      }, {\n        regex: \"(webOS|hpwOS)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?\",\n        os_replacement: \"webOS\"\n      }, {\n        regex: \"(SUSE|Fedora|Red Hat|PCLinuxOS)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",\n        other: true\n      }, {\n        regex: \"(SUSE|Fedora|Red Hat|Puppy|PCLinuxOS|CentOS)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",\n        other: true\n      }, {\n        regex: \"(Ubuntu|Kindle|Bada|Lubuntu|BackTrack|Red Hat|Slackware)/(\\\\d+)\\\\.(\\\\d+)\"\n      }, {\n        regex: \"(Windows|OpenBSD|FreeBSD|NetBSD|Ubuntu|Kubuntu|Android|Arch Linux|CentOS|WeTab|Slackware)\"\n      }, {\n        regex: \"(Linux|BSD)\",\n        other: true\n      }],\n      mobile_os_families: [\"Windows Phone 6.5\", \"Windows CE\", \"Symbian OS\"],\n      device_parsers: [{\n        regex: \"HTC ([A-Z][a-z0-9]+) Build\",\n        device_replacement: \"HTC $1\",\n        manufacturer: \"HTC\"\n      }, {\n        regex: \"HTC ([A-Z][a-z0-9 ]+) \\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+\",\n        device_replacement: \"HTC $1\",\n        manufacturer: \"HTC\"\n      }, {\n        regex: \"HTC_Touch_([A-Za-z0-9]+)\",\n        device_replacement: \"HTC Touch ($1)\",\n        manufacturer: \"HTC\"\n      }, {\n        regex: \"USCCHTC(\\\\d+)\",\n        device_replacement: \"HTC $1 (US Cellular)\",\n        manufacturer: \"HTC\"\n      }, {\n        regex: \"Sprint APA(9292)\",\n        device_replacement: \"HTC $1 (Sprint)\",\n        manufacturer: \"HTC\"\n      }, {\n        regex: \"HTC ([A-Za-z0-9]+ [A-Z])\",\n        device_replacement: \"HTC $1\",\n        manufacturer: \"HTC\"\n      }, {\n        regex: \"HTC-([A-Za-z0-9]+)\",\n        device_replacement: \"HTC $1\",\n        manufacturer: \"HTC\"\n      }, {\n        regex: \"HTC_([A-Za-z0-9]+)\",\n        device_replacement: \"HTC $1\",\n        manufacturer: \"HTC\"\n      }, {\n        regex: \"HTC ([A-Za-z0-9]+)\",\n        device_replacement: \"HTC $1\",\n        manufacturer: \"HTC\"\n      }, {\n        regex: \"(ADR[A-Za-z0-9]+)\",\n        device_replacement: \"HTC $1\",\n        manufacturer: \"HTC\"\n      }, {\n        regex: \"(HTC)\",\n        manufacturer: \"HTC\"\n      }, {\n        regex: \"SonyEricsson([A-Za-z0-9]+)/\",\n        device_replacement: \"Ericsson $1\",\n        other: true,\n        manufacturer: \"Sony\"\n      }, {\n        regex: \"Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\; [A-Za-z]{2}\\\\-[A-Za-z]{2}\\\\; WOWMobile (.+) Build\"\n      }, {\n        regex: \"Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\.[\\\\d]+; [A-Za-z]{2}\\\\-[A-Za-z]{2}\\\\; (.+) Build\"\n      }, {\n        regex: \"Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\-update1\\\\; [A-Za-z]{2}\\\\-[A-Za-z]{2}\\\\; (.+) Build\"\n      }, {\n        regex: \"Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\; [A-Za-z]{2}\\\\-[A-Za-z]{2}\\\\; (.+) Build\"\n      }, {\n        regex: \"Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\.[\\\\d]+; (.+) Build\"\n      }, {\n        regex: \"NokiaN([0-9]+)\",\n        device_replacement: \"Nokia N$1\",\n        manufacturer: \"Nokia\"\n      }, {\n        regex: \"Nokia([A-Za-z0-9\\\\v-]+)\",\n        device_replacement: \"Nokia $1\",\n        manufacturer: \"Nokia\"\n      }, {\n        regex: \"NOKIA ([A-Za-z0-9\\\\-]+)\",\n        device_replacement: \"Nokia $1\",\n        manufacturer: \"Nokia\"\n      }, {\n        regex: \"Nokia ([A-Za-z0-9\\\\-]+)\",\n        device_replacement: \"Nokia $1\",\n        manufacturer: \"Nokia\"\n      }, {\n        regex: \"Lumia ([A-Za-z0-9\\\\-]+)\",\n        device_replacement: \"Lumia $1\",\n        manufacturer: \"Nokia\"\n      }, {\n        regex: \"Symbian\",\n        device_replacement: \"Nokia\",\n        manufacturer: \"Nokia\"\n      }, {\n        regex: \"(PlayBook).+RIM Tablet OS\",\n        device_replacement: \"Blackberry Playbook\",\n        tablet: true,\n        manufacturer: \"RIM\"\n      }, {\n        regex: \"(Black[Bb]erry [0-9]+);\",\n        manufacturer: \"RIM\"\n      }, {\n        regex: \"Black[Bb]erry([0-9]+)\",\n        device_replacement: \"BlackBerry $1\",\n        manufacturer: \"RIM\"\n      }, {\n        regex: \"(Pre)/(\\\\d+)\\\\.(\\\\d+)\",\n        device_replacement: \"Palm Pre\",\n        manufacturer: \"Palm\"\n      }, {\n        regex: \"(Pixi)/(\\\\d+)\\\\.(\\\\d+)\",\n        device_replacement: \"Palm Pixi\",\n        manufacturer: \"Palm\"\n      }, {\n        regex: \"(Touchpad)/(\\\\d+)\\\\.(\\\\d+)\",\n        device_replacement: \"HP Touchpad\",\n        manufacturer: \"HP\"\n      }, {\n        regex: \"HPiPAQ([A-Za-z0-9]+)/(\\\\d+).(\\\\d+)\",\n        device_replacement: \"HP iPAQ $1\",\n        manufacturer: \"HP\"\n      }, {\n        regex: \"Palm([A-Za-z0-9]+)\",\n        device_replacement: \"Palm $1\",\n        manufacturer: \"Palm\"\n      }, {\n        regex: \"Treo([A-Za-z0-9]+)\",\n        device_replacement: \"Palm Treo $1\",\n        manufacturer: \"Palm\"\n      }, {\n        regex: \"webOS.*(P160UNA)/(\\\\d+).(\\\\d+)\",\n        device_replacement: \"HP Veer\",\n        manufacturer: \"HP\"\n      }, {\n        regex: \"(Kindle Fire)\",\n        manufacturer: \"Amazon\"\n      }, {\n        regex: \"(Kindle)\",\n        manufacturer: \"Amazon\"\n      }, {\n        regex: \"(Silk)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.([0-9\\\\-]+))?\",\n        device_replacement: \"Kindle Fire\",\n        tablet: true,\n        manufacturer: \"Amazon\"\n      }, {\n        regex: \"(iPad) Simulator;\",\n        manufacturer: \"Apple\"\n      }, {\n        regex: \"(iPad);\",\n        manufacturer: \"Apple\"\n      }, {\n        regex: \"(iPod);\",\n        manufacturer: \"Apple\"\n      }, {\n        regex: \"(iPhone) Simulator;\",\n        manufacturer: \"Apple\"\n      }, {\n        regex: \"(iPhone);\",\n        manufacturer: \"Apple\"\n      }, {\n        regex: \"Nexus\\\\ ([A-Za-z0-9\\\\-]+)\",\n        device_replacement: \"Nexus $1\"\n      }, {\n        regex: \"acer_([A-Za-z0-9]+)_\",\n        device_replacement: \"Acer $1\",\n        manufacturer: \"Acer\"\n      }, {\n        regex: \"acer_([A-Za-z0-9]+)_\",\n        device_replacement: \"Acer $1\",\n        manufacturer: \"Acer\"\n      }, {\n        regex: \"Amoi\\\\-([A-Za-z0-9]+)\",\n        device_replacement: \"Amoi $1\",\n        other: true,\n        manufacturer: \"Amoi\"\n      }, {\n        regex: \"AMOI\\\\-([A-Za-z0-9]+)\",\n        device_replacement: \"Amoi $1\",\n        other: true,\n        manufacturer: \"Amoi\"\n      }, {\n        regex: \"Asus\\\\-([A-Za-z0-9]+)\",\n        device_replacement: \"Asus $1\",\n        manufacturer: \"Asus\"\n      }, {\n        regex: \"ASUS\\\\-([A-Za-z0-9]+)\",\n        device_replacement: \"Asus $1\",\n        manufacturer: \"Asus\"\n      }, {\n        regex: \"BIRD\\\\-([A-Za-z0-9]+)\",\n        device_replacement: \"Bird $1\",\n        other: true\n      }, {\n        regex: \"BIRD\\\\.([A-Za-z0-9]+)\",\n        device_replacement: \"Bird $1\",\n        other: true\n      }, {\n        regex: \"BIRD ([A-Za-z0-9]+)\",\n        device_replacement: \"Bird $1\",\n        other: true\n      }, {\n        regex: \"Dell ([A-Za-z0-9]+)\",\n        device_replacement: \"Dell $1\",\n        manufacturer: \"Dell\"\n      }, {\n        regex: \"DoCoMo/2\\\\.0 ([A-Za-z0-9]+)\",\n        device_replacement: \"DoCoMo $1\",\n        other: true\n      }, {\n        regex: \"([A-Za-z0-9]+)\\\\_W\\\\;FOMA\",\n        device_replacement: \"DoCoMo $1\",\n        other: true\n      }, {\n        regex: \"([A-Za-z0-9]+)\\\\;FOMA\",\n        device_replacement: \"DoCoMo $1\",\n        other: true\n      }, {\n        regex: \"vodafone([A-Za-z0-9]+)\",\n        device_replacement: \"Huawei Vodafone $1\",\n        other: true\n      }, {\n        regex: \"i\\\\-mate ([A-Za-z0-9]+)\",\n        device_replacement: \"i-mate $1\",\n        other: true\n      }, {\n        regex: \"Kyocera\\\\-([A-Za-z0-9]+)\",\n        device_replacement: \"Kyocera $1\",\n        other: true\n      }, {\n        regex: \"KWC\\\\-([A-Za-z0-9]+)\",\n        device_replacement: \"Kyocera $1\",\n        other: true\n      }, {\n        regex: \"Lenovo\\\\-([A-Za-z0-9]+)\",\n        device_replacement: \"Lenovo $1\",\n        manufacturer: \"Lenovo\"\n      }, {\n        regex: \"Lenovo\\\\_([A-Za-z0-9]+)\",\n        device_replacement: \"Lenovo $1\",\n        manufacturer: \"Levovo\"\n      }, {\n        regex: \"LG/([A-Za-z0-9]+)\",\n        device_replacement: \"LG $1\",\n        manufacturer: \"LG\"\n      }, {\n        regex: \"LG-LG([A-Za-z0-9]+)\",\n        device_replacement: \"LG $1\",\n        manufacturer: \"LG\"\n      }, {\n        regex: \"LGE-LG([A-Za-z0-9]+)\",\n        device_replacement: \"LG $1\",\n        manufacturer: \"LG\"\n      }, {\n        regex: \"LGE VX([A-Za-z0-9]+)\",\n        device_replacement: \"LG $1\",\n        manufacturer: \"LG\"\n      }, {\n        regex: \"LG ([A-Za-z0-9]+)\",\n        device_replacement: \"LG $1\",\n        manufacturer: \"LG\"\n      }, {\n        regex: \"LGE LG\\\\-AX([A-Za-z0-9]+)\",\n        device_replacement: \"LG $1\",\n        manufacturer: \"LG\"\n      }, {\n        regex: \"LG\\\\-([A-Za-z0-9]+)\",\n        device_replacement: \"LG $1\",\n        manufacturer: \"LG\"\n      }, {\n        regex: \"LGE\\\\-([A-Za-z0-9]+)\",\n        device_replacement: \"LG $1\",\n        manufacturer: \"LG\"\n      }, {\n        regex: \"LG([A-Za-z0-9]+)\",\n        device_replacement: \"LG $1\",\n        manufacturer: \"LG\"\n      }, {\n        regex: \"(KIN)\\\\.One (\\\\d+)\\\\.(\\\\d+)\",\n        device_replacement: \"Microsoft $1\"\n      }, {\n        regex: \"(KIN)\\\\.Two (\\\\d+)\\\\.(\\\\d+)\",\n        device_replacement: \"Microsoft $1\"\n      }, {\n        regex: \"(Motorola)\\\\-([A-Za-z0-9]+)\",\n        manufacturer: \"Motorola\"\n      }, {\n        regex: \"MOTO\\\\-([A-Za-z0-9]+)\",\n        device_replacement: \"Motorola $1\",\n        manufacturer: \"Motorola\"\n      }, {\n        regex: \"MOT\\\\-([A-Za-z0-9]+)\",\n        device_replacement: \"Motorola $1\",\n        manufacturer: \"Motorola\"\n      }, {\n        regex: \"Philips([A-Za-z0-9]+)\",\n        device_replacement: \"Philips $1\",\n        manufacturer: \"Philips\"\n      }, {\n        regex: \"Philips ([A-Za-z0-9]+)\",\n        device_replacement: \"Philips $1\",\n        manufacturer: \"Philips\"\n      }, {\n        regex: \"SAMSUNG-([A-Za-z0-9\\\\-]+)\",\n        device_replacement: \"Samsung $1\",\n        manufacturer: \"Samsung\"\n      }, {\n        regex: \"SAMSUNG\\\\; ([A-Za-z0-9\\\\-]+)\",\n        device_replacement: \"Samsung $1\",\n        manufacturer: \"Samsung\"\n      }, {\n        regex: \"Softbank/1\\\\.0/([A-Za-z0-9]+)\",\n        device_replacement: \"Softbank $1\",\n        other: true\n      }, {\n        regex: \"Softbank/2\\\\.0/([A-Za-z0-9]+)\",\n        device_replacement: \"Softbank $1\",\n        other: true\n      }, {\n        regex: \"(hiptop|avantgo|plucker|xiino|blazer|elaine|up.browser|up.link|mmp|smartphone|midp|wap|vodafone|o2|pocket|mobile|pda)\",\n        device_replacement: \"Generic Smartphone\"\n      }, {\n        regex: \"^(1207|3gso|4thp|501i|502i|503i|504i|505i|506i|6310|6590|770s|802s|a wa|acer|acs\\\\-|airn|alav|asus|attw|au\\\\-m|aur |aus |abac|acoo|aiko|alco|alca|amoi|anex|anny|anyw|aptu|arch|argo|bell|bird|bw\\\\-n|bw\\\\-u|beck|benq|bilb|blac|c55/|cdm\\\\-|chtm|capi|comp|cond|craw|dall|dbte|dc\\\\-s|dica|ds\\\\-d|ds12|dait|devi|dmob|doco|dopo|el49|erk0|esl8|ez40|ez60|ez70|ezos|ezze|elai|emul|eric|ezwa|fake|fly\\\\-|fly\\\\_|g\\\\-mo|g1 u|g560|gf\\\\-5|grun|gene|go.w|good|grad|hcit|hd\\\\-m|hd\\\\-p|hd\\\\-t|hei\\\\-|hp i|hpip|hs\\\\-c|htc |htc\\\\-|htca|htcg)\",\n        device_replacement: \"Generic Feature Phone\"\n      }, {\n        regex: \"^(htcp|htcs|htct|htc\\\\_|haie|hita|huaw|hutc|i\\\\-20|i\\\\-go|i\\\\-ma|i230|iac|iac\\\\-|iac/|ig01|im1k|inno|iris|jata|java|kddi|kgt|kgt/|kpt |kwc\\\\-|klon|lexi|lg g|lg\\\\-a|lg\\\\-b|lg\\\\-c|lg\\\\-d|lg\\\\-f|lg\\\\-g|lg\\\\-k|lg\\\\-l|lg\\\\-m|lg\\\\-o|lg\\\\-p|lg\\\\-s|lg\\\\-t|lg\\\\-u|lg\\\\-w|lg/k|lg/l|lg/u|lg50|lg54|lge\\\\-|lge/|lynx|leno|m1\\\\-w|m3ga|m50/|maui|mc01|mc21|mcca|medi|meri|mio8|mioa|mo01|mo02|mode|modo|mot |mot\\\\-|mt50|mtp1|mtv |mate|maxo|merc|mits|mobi|motv|mozz|n100|n101|n102|n202|n203|n300|n302|n500|n502|n505|n700|n701|n710|nec\\\\-|nem\\\\-|newg|neon)\",\n        device_replacement: \"Generic Feature Phone\"\n      }, {\n        regex: \"^(netf|noki|nzph|o2 x|o2\\\\-x|opwv|owg1|opti|oran|ot\\\\-s|p800|pand|pg\\\\-1|pg\\\\-2|pg\\\\-3|pg\\\\-6|pg\\\\-8|pg\\\\-c|pg13|phil|pn\\\\-2|pt\\\\-g|palm|pana|pire|pock|pose|psio|qa\\\\-a|qc\\\\-2|qc\\\\-3|qc\\\\-5|qc\\\\-7|qc07|qc12|qc21|qc32|qc60|qci\\\\-|qwap|qtek|r380|r600|raks|rim9|rove|s55/|sage|sams|sc01|sch\\\\-|scp\\\\-|sdk/|se47|sec\\\\-|sec0|sec1|semc|sgh\\\\-|shar|sie\\\\-|sk\\\\-0|sl45|slid|smb3|smt5|sp01|sph\\\\-|spv |spv\\\\-|sy01|samm|sany|sava|scoo|send|siem|smar|smit|soft|sony|t\\\\-mo|t218|t250|t600|t610|t618|tcl\\\\-|tdg\\\\-|telm|tim\\\\-|ts70|tsm\\\\-|tsm3|tsm5|tx\\\\-9|tagt)\",\n        device_replacement: \"Generic Feature Phone\"\n      }, {\n        regex: \"^(talk|teli|topl|tosh|up.b|upg1|utst|v400|v750|veri|vk\\\\-v|vk40|vk50|vk52|vk53|vm40|vx98|virg|vite|voda|vulc|w3c |w3c\\\\-|wapj|wapp|wapu|wapm|wig |wapi|wapr|wapv|wapy|wapa|waps|wapt|winc|winw|wonu|x700|xda2|xdag|yas\\\\-|your|zte\\\\-|zeto|aste|audi|avan|blaz|brew|brvw|bumb|ccwa|cell|cldc|cmd\\\\-|dang|eml2|fetc|hipt|http|ibro|idea|ikom|ipaq|jbro|jemu|jigs|keji|kyoc|kyok|libw|m\\\\-cr|midp|mmef|moto|mwbp|mywa|newt|nok6|o2im|pant|pdxg|play|pluc|port|prox|rozo|sama|seri|smal|symb|treo|upsi|vx52|vx53|vx60|vx61|vx70|vx80|vx81|vx83|vx85|wap\\\\-|webc|whit|wmlb|xda\\\\-|xda\\\\_)\",\n        device_replacement: \"Generic Feature Phone\"\n      }, {\n        regex: \"(bot|borg|google(^tv)|yahoo|slurp|msnbot|msrbot|openbot|archiver|netresearch|lycos|scooter|altavista|teoma|gigabot|baiduspider|blitzbot|oegp|charlotte|furlbot|http%20client|polybot|htdig|ichiro|mogimogi|larbin|pompos|scrubby|searchsight|seekbot|semanticdiscovery|silk|snappy|speedy|spider|voila|vortex|voyager|zao|zeal|fast\\\\-webcrawler|converacrawler|dataparksearch|findlinks)\",\n        device_replacement: \"Spider\"\n      }],\n      mobile_browser_families: [\"Firefox Mobile\", \"Opera Mobile\", \"Opera Mini\", \"Mobile Safari\", \"webOS\", \"IE Mobile\", \"Playstation Portable\", \"Nokia\", \"Blackberry\", \"Palm\", \"Silk\", \"Android\", \"Maemo\", \"Obigo\", \"Netfront\", \"AvantGo\", \"Teleca\", \"SEMC-Browser\", \"Bolt\", \"Iris\", \"UP.Browser\", \"Symphony\", \"Minimo\", \"Bunjaloo\", \"Jasmine\", \"Dolfin\", \"Polaris\", \"BREW\", \"Chrome Mobile\", \"Chrome Mobile iOS\", \"UC Browser\", \"Tizen Browser\"]\n    }; // Parsers\n\n    _this.parsers = [\"device_parsers\", \"browser_parsers\", \"os_parsers\", \"mobile_os_families\", \"mobile_browser_families\"]; // Types\n\n    _this.types = [\"browser\", \"os\", \"device\"]; // Regular Expressions\n\n    _this.regexes = regexes || function () {\n      var results = {};\n\n      _this.parsers.map(function (parser) {\n        results[parser] = [];\n      });\n\n      return results;\n    }(); // Families\n\n\n    _this.families = function () {\n      var results = {};\n\n      _this.types.map(function (type) {\n        results[type] = [];\n      });\n\n      return results;\n    }(); // Utility Variables\n\n\n    var ArrayProto = Array.prototype,\n        ObjProto = Object.prototype,\n        FuncProto = Function.prototype,\n        nativeForEach = ArrayProto.forEach,\n        nativeIndexOf = ArrayProto.indexOf; // Find Utility\n\n    var find = function find(ua, obj) {\n      var ret = {};\n\n      for (var i = 0; i < obj.length; i++) {\n        ret = obj[i](ua);\n\n        if (ret) {\n          break;\n        }\n      }\n\n      return ret;\n    }; // Remove Utility\n\n\n    var remove = function remove(arr, props) {\n      each(arr, function (obj) {\n        each(props, function (prop) {\n          delete obj[prop];\n        });\n      });\n    }; // Contains Utility\n\n\n    var contains = function contains(obj, target) {\n      var found = false;\n      if (obj == null) return found;\n      if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n      found = any(obj, function (value) {\n        return value === target;\n      });\n      return found;\n    }; // Each Utility\n\n\n    var each = forEach = function forEach(obj, iterator, context) {\n      if (obj == null) return;\n\n      if (nativeForEach && obj.forEach === nativeForEach) {\n        obj.forEach(iterator, context);\n      } else if (obj.length === +obj.length) {\n        for (var i = 0, l = obj.length; i < l; i++) {\n          iterator.call(context, obj[i], i, obj);\n        }\n      } else {\n        for (var key in obj) {\n          if (_.has(obj, key)) {\n            iterator.call(context, obj[key], key, obj);\n          }\n        }\n      }\n    }; // Extend Utiltiy\n\n\n    var extend = function extend(obj) {\n      each(slice.call(arguments, 1), function (source) {\n        for (var prop in source) {\n          obj[prop] = source[prop];\n        }\n      });\n      return obj;\n    }; // Check String Utility\n\n\n    var check = function check(str) {\n      return !!(str && typeof str != \"undefined\" && str != null);\n    }; // To Version String Utility\n\n\n    var toVersionString = function toVersionString(obj) {\n      var output = \"\";\n      obj = obj || {};\n\n      if (check(obj)) {\n        if (check(obj.major)) {\n          output += obj.major;\n\n          if (check(obj.minor)) {\n            output += \".\" + obj.minor;\n\n            if (check(obj.patch)) {\n              output += \".\" + obj.patch;\n            }\n          }\n        }\n      }\n\n      return output;\n    }; // To String Utility\n\n\n    var toString = function toString(obj) {\n      obj = obj || {};\n      var suffix = toVersionString(obj);\n      if (suffix) suffix = \" \" + suffix;\n      return obj && check(obj.family) ? obj.family + suffix : \"\";\n    }; // Parse User-Agent String\n\n\n    _this.parse = function (ua) {\n      // Parsers Utility\n      var parsers = function parsers(type) {\n        return _this.regexes[type + \"_parsers\"].map(function (obj) {\n          var regexp = new RegExp(obj.regex),\n              rep = obj[(type === \"browser\" ? \"family\" : type) + \"_replacement\"],\n              major_rep = obj.major_version_replacement;\n\n          function parser(ua) {\n            var m = ua.match(regexp);\n            if (!m) return null;\n            var ret = {};\n            ret.family = (rep ? rep.replace(\"$1\", m[1]) : m[1]) || \"other\";\n            ret.major = parseInt(major_rep ? major_rep : m[2]) || null;\n            ret.minor = m[3] ? parseInt(m[3]) : null;\n            ret.patch = m[4] ? parseInt(m[4]) : null;\n            ret.tablet = obj.tablet;\n            ret.man = obj.manufacturer || null;\n            return ret;\n          }\n\n          return parser;\n        });\n      }; // User Agent\n\n\n      var UserAgent = function UserAgent() {}; // Browsers Parsed\n\n\n      var browser_parsers = parsers(\"browser\"); // Operating Systems Parsed\n\n      var os_parsers = parsers(\"os\"); // Devices Parsed\n\n      var device_parsers = parsers(\"device\"); // Set Agent\n\n      var a = new UserAgent(); // Remember the original user agent string\n\n      a.source = ua; // Set Browser\n\n      a.browser = find(ua, browser_parsers);\n\n      if (check(a.browser)) {\n        a.browser.name = toString(a.browser);\n        a.browser.version = toVersionString(a.browser);\n      } else {\n        a.browser = {};\n      } // Set OS\n\n\n      a.os = find(ua, os_parsers);\n\n      if (check(a.os)) {\n        a.os.name = toString(a.os);\n        a.os.version = toVersionString(a.os);\n      } else {\n        a.os = {};\n      } // Set Device\n\n\n      a.device = find(ua, device_parsers);\n\n      if (check(a.device)) {\n        a.device.name = toString(a.device);\n        a.device.version = toVersionString(a.device);\n      } else {\n        a.device = {\n          tablet: false,\n          family: \"Other\"\n        };\n      } // Determine Device Type\n\n\n      var mobile_agents = {};\n\n      var mobile_browser_families = _this.regexes.mobile_browser_families.map(function (str) {\n        mobile_agents[str] = true;\n      });\n\n      var mobile_os_families = _this.regexes.mobile_os_families.map(function (str) {\n        mobile_agents[str] = true;\n      }); // Is Spider\n\n\n      if (a.browser.family === \"Spider\") {\n        a.device.type = \"Spider\";\n      } else if (a.browser.tablet || a.os.tablet || a.device.tablet) {\n        a.device.type = \"Tablet\";\n      } else if (mobile_agents.hasOwnProperty(a.browser.family)) {\n        a.device.type = \"Mobile\";\n      } else {\n        a.device.type = \"Desktop\";\n      } // Determine Device Manufacturer\n\n\n      a.device.manufacturer = a.browser.man || a.os.man || a.device.man || null; // Cleanup Objects\n\n      remove([a.browser, a.os, a.device], [\"tablet\", \"man\"]); // Return Agent\n\n      return a;\n    }; // Return context\n\n\n    return _this;\n  }(); // Export the Underscore object for **Node.js** and **\"CommonJS\"**,\n  // backwards-compatibility for the old `require()` API. If we're not\n  // CommonJS, add `_` to the global object via a string identifier\n  // the Closure Compiler \"advanced\" mode. Registration as an AMD\n  // via define() happens at the end of this file\n\n\n  if (typeof exports !== \"undefined\") {\n    if (typeof module !== \"undefined\" && module.exports) {\n      exports = module.exports = detect;\n    }\n\n    exports.detect = detect;\n  } else {\n    root[\"detect\"] = detect;\n  } // AMD define happens at the end for compatibility with AMD\n  // that don't enforce next-turn semantics on modules\n\n\n  if (typeof define === \"function\" && define.amd) {\n    define(function (require) {\n      return detect;\n    });\n  }\n})(window);"],"sourceRoot":""}